{"ast":null,"code":"import { $authHost, $host } from \"./index\";\nexport const createType = async genre => {\n  const {\n    data\n  } = await $authHost.post('api/genre', genre);\n  return data;\n};\nexport const fetchTypes = async () => {\n  const {\n    data\n  } = await $host.get('api/genre');\n  return data;\n};\nexport const createBrand = async autor => {\n  const {\n    data\n  } = await $authHost.post('api/autor', autor);\n  return data;\n};\nexport const fetchBrands = async () => {\n  const {\n    data\n  } = await $host.get('api/autor');\n  return data;\n};\nexport const createDevice = async book => {\n  const {\n    data\n  } = await $authHost.post('api/book', book);\n  return data;\n};\nexport const fetchDevices = async () => {\n  const {\n    data\n  } = await $host.get('api/book');\n  return data;\n};\nexport const fetchOneDevice = async id => {\n  const {\n    data\n  } = await $host.get('api/book/' + id);\n  return data;\n};\n\n// Новые функции\nexport const getBooksByReader = async readerId => {\n  const {\n    data\n  } = await $host.get(`api/books/reader/${readerId}`);\n  return data;\n};\nexport const getBookByCipher = async id => {\n  const {\n    data\n  } = await host.get('api/book/' + id);\n  return data;\n};\nexport const getCipherByBookTitle = async title => {\n  const {\n    data\n  } = await $host.get(`api/book/` + title);\n  return data;\n};\nexport const getBookAssignmentDate = async (bookId, readerId) => {\n  const {\n    data\n  } = await $host.get(`api/books/${bookId}/reader/${readerId}/assignment-date`);\n  return data;\n};\nexport const getReadersWithOldBooks = async () => {\n  const {\n    data\n  } = await $host.get('api/readers/old-books');\n  return data;\n};\nexport const getReadersWithFewBooks = async () => {\n  const {\n    data\n  } = await $host.get('api/readers/few-books');\n  return data;\n};\nexport const getNumberOfReaders = async () => {\n  const {\n    data\n  } = await $host.get('api/readers/count');\n  return data;\n};\nexport const addNewReader = async readerData => {\n  const {\n    data\n  } = await $authHost.post('api/readers', readerData);\n  return data;\n};\nexport const removeOldBook = async bookId => {\n  const {\n    data\n  } = await $authHost.delete(`api/books/${bookId}`);\n  return data;\n};","map":{"version":3,"names":["$authHost","$host","createType","genre","data","post","fetchTypes","get","createBrand","autor","fetchBrands","createDevice","book","fetchDevices","fetchOneDevice","id","getBooksByReader","readerId","getBookByCipher","host","getCipherByBookTitle","title","getBookAssignmentDate","bookId","getReadersWithOldBooks","getReadersWithFewBooks","getNumberOfReaders","addNewReader","readerData","removeOldBook","delete"],"sources":["C:/Web_BookStorage/client/src/http/api.js"],"sourcesContent":["import {$authHost, $host} from \"./index\";\r\n\r\nexport const createType = async (genre) => {\r\n  const {data} = await $authHost.post('api/genre', genre)\r\n  return data\r\n}\r\n\r\nexport const fetchTypes = async () => {\r\n  const {data} = await $host.get('api/genre')\r\n  return data\r\n}\r\n\r\nexport const createBrand = async (autor) => {\r\n  const {data} = await $authHost.post('api/autor', autor)\r\n  return data\r\n}\r\n\r\nexport const fetchBrands = async () => {\r\n  const {data} = await $host.get('api/autor', )\r\n  return data\r\n}\r\n\r\nexport const createDevice = async (book) => {\r\n  const {data} = await $authHost.post('api/book', book)\r\n  return data\r\n}\r\n\r\nexport const fetchDevices = async () => {\r\n  const {data} = await $host.get('api/book')\r\n  return data\r\n}\r\n\r\nexport const fetchOneDevice = async (id) => {\r\n  const {data} = await $host.get('api/book/' + id)\r\n  return data\r\n}\r\n\r\n// Новые функции\r\nexport const getBooksByReader = async (readerId) => {\r\n  const {data} = await $host.get(`api/books/reader/${readerId}`);\r\n  return data;\r\n};\r\n\r\nexport const getBookByCipher = async (id) => {\r\n  const {data} = await host.get('api/book/' + id);\r\n  return data;\r\n};\r\n\r\nexport const getCipherByBookTitle = async (title) => {\r\n  const {data} = await $host.get(`api/book/` + title);\r\n  return data;\r\n};\r\n\r\nexport const getBookAssignmentDate = async (bookId, readerId) => {\r\n  const {data} = await $host.get(`api/books/${bookId}/reader/${readerId}/assignment-date`);\r\n  return data;\r\n};\r\n\r\nexport const getReadersWithOldBooks = async () => {\r\n  const {data} = await $host.get('api/readers/old-books');\r\n  return data;\r\n};\r\n\r\nexport const getReadersWithFewBooks = async () => {\r\n  const {data} = await $host.get('api/readers/few-books');\r\n  return data;\r\n};\r\n\r\nexport const getNumberOfReaders = async () => {\r\n  const {data} = await $host.get('api/readers/count');\r\n  return data;\r\n};\r\n\r\nexport const addNewReader = async (readerData) => {\r\n  const {data} = await $authHost.post('api/readers', readerData);\r\n  return data;\r\n};\r\n\r\nexport const removeOldBook = async (bookId) => {\r\n  const {data} = await $authHost.delete(`api/books/${bookId}`);\r\n  return data;\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}