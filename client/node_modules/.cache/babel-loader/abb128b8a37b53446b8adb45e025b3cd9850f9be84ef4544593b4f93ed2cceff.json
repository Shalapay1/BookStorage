{"ast":null,"code":"var _jsxFileName = \"C:\\\\Web_BookStorage\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport AppRouter from './components/Approuter';\nimport NavBar from './components/NavBar';\nimport { observer } from 'mobx-react-lite';\nimport { Context } from \"./index\";\nimport { check } from \"./http/userAPI\";\nimport { Spinner } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = _s(observer(_c = _s(() => {\n  _s();\n  const {\n    user\n  } = useContext(Context);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    check().then(data => {\n      user.setUser(true);\n      user.setIsAuth(true);\n    }).finally(() => setLoading(false));\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {\n      animation: \"grow\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 14\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(AppRouter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 7\n  }, this);\n}, \"eoNEOO0XgZmELjwcufg9rFYsGdc=\")), \"eoNEOO0XgZmELjwcufg9rFYsGdc=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App$observer\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","BrowserRouter","AppRouter","NavBar","observer","Context","check","Spinner","jsxDEV","_jsxDEV","App","_s","_c","user","useContext","loading","setLoading","useState","useEffect","then","data","setUser","setIsAuth","finally","animation","fileName","_jsxFileName","lineNumber","columnNumber","children","_c2","$RefreshReg$"],"sources":["C:/Web_BookStorage/client/src/App.js"],"sourcesContent":["import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport AppRouter from './components/Approuter';\nimport NavBar from './components/NavBar';\nimport { observer } from 'mobx-react-lite';\nimport {Context} from \"./index\";\nimport {check} from \"./http/userAPI\";\nimport {Spinner} from \"react-bootstrap\";\n\nconst App = observer(() => {\n  const {user} = useContext(Context)\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n      check().then(data => {\n          user.setUser(true)\n          user.setIsAuth(true)\n      }).finally(() => setLoading(false))\n  }, [])\n\n  if (loading) {\n      return <Spinner animation={\"grow\"}/>\n  }\n\n  return (\n      <BrowserRouter>\n          <NavBar />\n          <AppRouter />\n      </BrowserRouter>\n  );\n});\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,QAAQ,kBAAkB;AAChD,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,MAAM,MAAM,qBAAqB;AACxC,SAASC,QAAQ,QAAQ,iBAAiB;AAC1C,SAAQC,OAAO,QAAO,SAAS;AAC/B,SAAQC,KAAK,QAAO,gBAAgB;AACpC,SAAQC,OAAO,QAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,GAAG,GAAAC,EAAA,CAAGP,QAAQ,CAAAQ,EAAA,GAAAD,EAAA,CAAC,MAAM;EAAAA,EAAA;EACzB,MAAM;IAACE;EAAI,CAAC,GAAGC,UAAU,CAACT,OAAO,CAAC;EAClC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGC,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACZZ,KAAK,CAAC,CAAC,CAACa,IAAI,CAACC,IAAI,IAAI;MACjBP,IAAI,CAACQ,OAAO,CAAC,IAAI,CAAC;MAClBR,IAAI,CAACS,SAAS,CAAC,IAAI,CAAC;IACxB,CAAC,CAAC,CAACC,OAAO,CAAC,MAAMP,UAAU,CAAC,KAAK,CAAC,CAAC;EACvC,CAAC,EAAE,EAAE,CAAC;EAEN,IAAID,OAAO,EAAE;IACT,oBAAON,OAAA,CAACF,OAAO;MAACiB,SAAS,EAAE;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EACxC;EAEA,oBACInB,OAAA,CAACR,aAAa;IAAA4B,QAAA,gBACVpB,OAAA,CAACN,MAAM;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVnB,OAAA,CAACP,SAAS;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEtB,CAAC,kCAAC;AAACE,GAAA,GArBGpB,GAAG;AAsBT,eAAeA,GAAG;AAAC,IAAAE,EAAA,EAAAkB,GAAA;AAAAC,YAAA,CAAAnB,EAAA;AAAAmB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}